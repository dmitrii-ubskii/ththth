(define (iterative-improve good-enough? improve)
  (lambda (first-guess)
    (define (try guess)
      (if (good-enough? guess)
          guess
          (try (improve guess))))
    (try first-guess)))

(define (average a b)
  (/ (+ a b) 2))
(define tolerance 0.00001)
(define (close-enough? a b) (< (abs (- a b)) tolerance))

(define (sqrt x)
  ((iterative-improve
     (lambda (y) (close-enough? y (/ x y)))
     (lambda (y) (average y (/ x y))))
   1.0))
(sqrt 81)

(define (fixed-point f first-guess)
  ((iterative-improve
     (lambda (y) (close-enough? y (f y)))
     f)
   first-guess))
(fixed-point (lambda (x) (+ 1 (/ 1 x))) 1.0)

